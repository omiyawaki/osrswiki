# Remove import for SearchRepository
/import com\.omiyawaki\.osrswiki\.data\.repository\.SearchRepository/ {next}
# Remove the test method appCodeIsReachable_SearchRepositoryInstance
# This is a bit tricky; assumes it's a 5-line block starting with @Test
# and containing "fun appCodeIsReachable_SearchRepositoryInstance()"
# A safer way is to rely on the user having few tests or a more complex sed/awk if needed.
# For now, let's assume simple structure and remove based on function name line + surrounding lines.
# This removal part is fragile. If it fails, manual cleanup might be needed.
# A simpler approach if this is the ONLY custom test: just restore from VCS or use the original boilerplate.
# Given we're replacing, let's just apply the ADD script to the *original* state if possible.
# For now, this script will try to remove it.

# State machine to remove the specific test method block
# 0 = normal, 1 = found @Test, 2 = found fun name, 3 = found {, 4 = found SearchRepository(), 5 = found assertNotNull, 6 = found }
BEGIN { state = 0; }
/^\s*@Test\s*$/ {
    if (state == 0) { state = 1; buffer = $0; next; }
}
/^\s*fun appCodeIsReachable_SearchRepositoryInstance\(\)\s*\{/ {
    if (state == 1) { state = 2; buffer = ""; next; } # Start of method, clear buffer, skip line
}
# If we are more aggressive, we can simply delete lines if state indicates we are inside the method.
# This is too complex for a quick robust script.

# SAFER: We will just add the new test and import. If the old one is there, there will be two.
# User can manually remove the SearchRepository one if this new one works.
# So, the "remove" awk scripts are not needed. We just use the "add" scripts.
